[semantic_release]
assets = []
build_command = "uv build"
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = false
allow_zero_version = true
repo_dir = "."
no_git_verify = false
tag_format = "v{version}"
version_provider = "tag"
version_variables = [
    "src/charlabs/logging/__init__.py:__version__",
]

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = false

[semantic_release.branches.main]
match = "main"
prerelease_token = "rc"
prerelease = false

[semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = true

[semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = true

[semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[semantic_release.remote.token]
env = "GITHUB_TOKEN"
