name: Release

on:
  workflow_dispatch:

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup project
        uses: ./.github/actions/setup-project
      - name: Run Ruff linter
        run: uv run ruff check
      - name: Check code formatting
        run: uv run ruff format --check

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      dist_artifacts_name: dist
      dist_artifacts_dir: dist
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full git history for semantic-release
      - name: Setup project
        uses: ./.github/actions/setup-project
      - name: Build
        id: version
        env:
          GH_TOKEN: "none"
        run: uv run semantic-release -c releaserc.toml -v version --no-commit --no-tag
      - name: Upload | Distribution Artifacts
        if: ${{ steps.version.outputs.released == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.dist_artifacts_name }}
          path: ${{ format('{0}/**', env.dist_artifacts_dir) }}
          if-no-files-found: error
          retention-days: 2

    outputs:
      new-release-detected: ${{ steps.version.outputs.released }}
      new-release-version: ${{ steps.version.outputs.version }}
      new-release-tag: ${{ steps.version.outputs.tag }}
      new-release-is-prerelease: ${{ steps.version.outputs.is_prerelease }}
      distribution-artifacts: ${{ env.dist_artifacts_name }}

  release:
    runs-on: ubuntu-latest
    needs:
      - code-quality
      - build
    if: ${{ needs.build.outputs.new-release-detected == 'true' && github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' }}
    environment:
      name: pypi
      url: https://pypi.org/p/charlabs-logging
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full git history for semantic-release
      - name: Setup project
        uses: ./.github/actions/setup-project
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        id: artifact-download
        with:
          name: ${{ needs.build.outputs.distribution-artifacts }}
          path: dist
      - name: Release
        id: release
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          uv run semantic-release -c releaserc.toml -v --strict version --skip-build
          uv run semantic-release -c releaserc.toml publish
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # v1.12.4
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          packages-dir: dist
          print-hash: true
          verbose: true
